/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}CoreMessaging_GetNotifications]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}[{objectQualifier}CoreMessaging_GetNotifications]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CoreMessaging_GetNotifications]
	@UserID int,
	@PortalID int,
	@AfterNotificationID int,
	@NumberOfRecords int
AS
BEGIN
	--Get the top message for each conversation
	SELECT TOP(@NumberOfRecords)
			M.[MessageID],
			M.[NotificationTypeId],
			M.[To],
			M.[From],
			M.[Subject],
			M.[Body],
			M.[SenderUserID],
			M.[ExpirationDate],
            M.[IncludeDismissAction],
			M.[CreatedByUserID],
			M.[CreatedOnDate],
			M.[LastModifiedByUserID],
			M.[LastModifiedOnDate],
            M.[Context],
			ROW_NUMBER() OVER(ORDER BY M.MessageId asc) AS RowNumber
		FROM {databaseOwner}[{objectQualifier}CoreMessaging_Messages] AS M
			JOIN {databaseOwner}[{objectQualifier}CoreMessaging_MessageRecipients] MR 
				ON (M.MessageID = MR.MessageID)
		WHERE [NotificationTypeId] IS NOT NULL
			AND MR.UserID = @UserID
			AND M.PortalID = @PortalID
			AND (M.[ExpirationDate] IS NULL OR (M.[ExpirationDate] IS NOT NULL AND M.[ExpirationDate] > GETUTCDATE()))
			AND (M.MessageID > @AfterNotificationID or @AfterNotificationID=-1)
		ORDER BY RowNumber asc
END
GO

